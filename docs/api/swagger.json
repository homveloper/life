{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A multiplayer FPS game server with OAuth authentication and N:1 account linking",
        "title": "LIFE Game Server API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://github.com/homveloper/life",
            "email": "support@lifegame.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/homveloper/life/blob/main/LICENSE"
        },
        "version": "0.1.0"
    },
    "host": "localhost:8082",
    "basePath": "/",
    "paths": {
        "/api/v1/auth.GuestLogin": {
            "post": {
                "description": "Login as guest user using device identifier for immediate game access",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Guest login with device ID",
                "parameters": [
                    {
                        "description": "JSON-RPC request with GuestLoginRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_GuestLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token for guest user",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_GuestLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth.LinkSocial": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Convert guest account to social account by linking with OAuth provider",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Link guest account to social provider",
                "parameters": [
                    {
                        "description": "JSON-RPC request with LinkSocialRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_LinkSocialRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated JWT token with social account",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_LinkSocialResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Not a guest account or already linked",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth.OAuthCallback": {
            "post": {
                "description": "Complete OAuth authentication with authorization code and receive JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Complete OAuth authentication flow",
                "parameters": [
                    {
                        "description": "JSON-RPC request with OAuthCallbackRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_OAuthCallbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token and user information",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_OAuthCallbackResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or authorization code",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/auth.OAuthStart": {
            "post": {
                "description": "Initiate OAuth authentication with a supported provider (google, github, discord)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Start OAuth authentication flow",
                "parameters": [
                    {
                        "description": "JSON-RPC request with OAuthStartRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_OAuthStartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OAuth authorization URL",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_OAuthStartResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/trainer.Create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new trainer with nickname for the authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Create a new trainer",
                "parameters": [
                    {
                        "description": "JSON-RPC request with CreateTrainerRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_CreateTrainerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created trainer information",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_CreateTrainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/trainer.Get": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get trainer information for the authenticated user (auto-creates if not exists)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Get trainer information",
                "parameters": [
                    {
                        "description": "JSON-RPC request with GetTrainerRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_GetTrainerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainer information",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_GetTrainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/trainer.List": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a list of all trainers in the game world (currently returns mock data)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "List all trainers",
                "parameters": [
                    {
                        "description": "JSON-RPC request with ListTrainerRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_ListTrainerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of trainers",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_ListTrainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/trainer.Move": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Move trainer to a new position on the game map with coordinate validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Move trainer to new position",
                "parameters": [
                    {
                        "description": "JSON-RPC request with MoveTrainerRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_MoveTrainerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated trainer with new position",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_MoveTrainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or invalid coordinates",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/trainer.Status": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed status information for the authenticated trainer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trainer"
                ],
                "summary": "Get trainer status",
                "parameters": [
                    {
                        "description": "JSON-RPC request with GetTrainerRequest params",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_GetTrainerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trainer status information",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_StatusTrainerResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Authentication required",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_danghamo_life_internal_api_jsonrpcx.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_CreateTrainerRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.CreateTrainerRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_GetTrainerRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.GetTrainerRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_GuestLoginRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.GuestLoginRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_LinkSocialRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.LinkSocialRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_ListTrainerRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.ListTrainerRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_MoveTrainerRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.MoveTrainerRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_OAuthCallbackRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.OAuthCallbackRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.RequestT-internal_api_handlers_OAuthStartRequest": {
            "type": "object",
            "properties": {
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "method": {
                    "type": "string"
                },
                "params": {
                    "$ref": "#/definitions/internal_api_handlers.OAuthStartRequest"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_CreateTrainerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.CreateTrainerResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_GetTrainerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.GetTrainerResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_GuestLoginResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.GuestLoginResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_LinkSocialResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.LinkSocialResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_ListTrainerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.ListTrainerResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_MoveTrainerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.MoveTrainerResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_OAuthCallbackResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.OAuthCallbackResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_OAuthStartResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.OAuthStartResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_api_jsonrpcx.ResponseT-internal_api_handlers_StatusTrainerResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_api_jsonrpcx.JSONRPCError"
                },
                "id": {},
                "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                },
                "result": {
                    "$ref": "#/definitions/internal_api_handlers.StatusTrainerResponse"
                }
            }
        },
        "github_com_danghamo_life_internal_domain_shared.Experience": {
            "type": "object"
        },
        "github_com_danghamo_life_internal_domain_shared.Level": {
            "type": "object"
        },
        "github_com_danghamo_life_internal_domain_shared.Money": {
            "type": "object"
        },
        "github_com_danghamo_life_internal_domain_shared.Position": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "github_com_danghamo_life_internal_domain_shared.Stats": {
            "type": "object",
            "properties": {
                "as": {
                    "description": "Attack Speed",
                    "type": "integer"
                },
                "atk": {
                    "description": "Attack",
                    "type": "integer"
                },
                "def": {
                    "description": "Defense",
                    "type": "integer"
                },
                "hp": {
                    "description": "Health Points",
                    "type": "integer"
                },
                "spd": {
                    "description": "Speed (movement)",
                    "type": "integer"
                }
            }
        },
        "github_com_danghamo_life_internal_domain_shared.Timestamp": {
            "type": "object"
        },
        "github_com_danghamo_life_internal_domain_trainer.AnimalParty": {
            "type": "object"
        },
        "github_com_danghamo_life_internal_domain_trainer.Inventory": {
            "type": "object",
            "properties": {
                "items": {
                    "description": "itemID -\u003e Item",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Item"
                    }
                },
                "max_slots": {
                    "type": "integer"
                }
            }
        },
        "github_com_danghamo_life_internal_domain_trainer.Item": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.ItemType"
                }
            }
        },
        "github_com_danghamo_life_internal_domain_trainer.ItemType": {
            "type": "string",
            "enum": [
                "health_potion",
                "mana_potion",
                "basic_net",
                "advanced_net",
                "master_net",
                "animal_hide",
                "rare_gem",
                "magic_crystal"
            ],
            "x-enum-varnames": [
                "HealthPotion",
                "ManaPotion",
                "BasicNet",
                "AdvancedNet",
                "MasterNet",
                "AnimalHide",
                "RareGem",
                "MagicCrystal"
            ]
        },
        "github_com_danghamo_life_internal_domain_trainer.Nickname": {
            "type": "object"
        },
        "internal_api_handlers.CreateTrainerRequest": {
            "type": "object",
            "properties": {
                "nickname": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.CreateTrainerResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                },
                "experience": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Experience"
                },
                "id": {
                    "description": "UserID from Account domain",
                    "type": "string"
                },
                "inventory": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Inventory"
                },
                "level": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Level"
                },
                "money": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Money"
                },
                "nickname": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Nickname"
                },
                "party": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.AnimalParty"
                },
                "position": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Position"
                },
                "stats": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Stats"
                },
                "updated_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                }
            }
        },
        "internal_api_handlers.GetTrainerRequest": {
            "type": "object"
        },
        "internal_api_handlers.GetTrainerResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                },
                "experience": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Experience"
                },
                "id": {
                    "description": "UserID from Account domain",
                    "type": "string"
                },
                "inventory": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Inventory"
                },
                "level": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Level"
                },
                "money": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Money"
                },
                "nickname": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Nickname"
                },
                "party": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.AnimalParty"
                },
                "position": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Position"
                },
                "stats": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Stats"
                },
                "updated_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                }
            }
        },
        "internal_api_handlers.GuestLoginRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.GuestLoginResponse": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer"
                },
                "is_guest": {
                    "type": "boolean"
                },
                "jwt_token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.LinkSocialRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.LinkSocialResponse": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer"
                },
                "jwt_token": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.ListTrainerRequest": {
            "type": "object"
        },
        "internal_api_handlers.ListTrainerResponse": {
            "type": "object",
            "properties": {
                "total": {
                    "type": "integer"
                },
                "trainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_api_handlers.TrainerSummary"
                    }
                }
            }
        },
        "internal_api_handlers.MoveTrainerRequest": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer"
                },
                "y": {
                    "type": "integer"
                }
            }
        },
        "internal_api_handlers.MoveTrainerResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                },
                "experience": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Experience"
                },
                "id": {
                    "description": "UserID from Account domain",
                    "type": "string"
                },
                "inventory": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Inventory"
                },
                "level": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Level"
                },
                "money": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Money"
                },
                "nickname": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Nickname"
                },
                "party": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.AnimalParty"
                },
                "position": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Position"
                },
                "stats": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Stats"
                },
                "updated_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                }
            }
        },
        "internal_api_handlers.OAuthCallbackRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.OAuthCallbackResponse": {
            "type": "object",
            "properties": {
                "expires_in": {
                    "type": "integer"
                },
                "jwt_token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.OAuthStartRequest": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.OAuthStartResponse": {
            "type": "object",
            "properties": {
                "auth_url": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "internal_api_handlers.StatusTrainerResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                },
                "experience": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Experience"
                },
                "id": {
                    "description": "UserID from Account domain",
                    "type": "string"
                },
                "inventory": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Inventory"
                },
                "level": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Level"
                },
                "money": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Money"
                },
                "nickname": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.Nickname"
                },
                "party": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_trainer.AnimalParty"
                },
                "position": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Position"
                },
                "stats": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Stats"
                },
                "updated_at": {
                    "$ref": "#/definitions/github_com_danghamo_life_internal_domain_shared.Timestamp"
                }
            }
        },
        "internal_api_handlers.TrainerSummary": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "position": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}